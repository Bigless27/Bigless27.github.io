<!DOCTYPE html>
<html>
<head>
  <title>Blog Seven</title>
  <meta charset="UTF-8">
  <link rel="stylesheet" type="text/css" href=../stylesheets/default.css>
  <link rel="stylesheet" type="text/css" href=../stylesheets/blog.css>
   <link rel="shortcut icon" href="../Bigless27.github.io.imgs/waiuigi_favicon.io.png" type="image/x-icon">
</head>

<main>
  <!--topnav-->

  <div class="topnav">
    <header> <div class="spacing-top">
      <a href="../index.html">Home</a></div>
       <div class="spacing-top"><a href="../about_me.html">About Me</a> </div>

        <div class="spacing-top"><a href="../projects/index.html">Projects</a></div>

        <div class="spacing-top"> <a href="blog-main.html">Blog</a></div>
        <div class="spacing-top">  <a href="../contact/contact">Contact</a></div>
        </div>


  <!--Header-->
<div class="background_container_blog">
  <div class="city">
  <img src="../Bigless27.github.io.imgs/nyc.jpg" width=100% height =740 alt="NYC"/>
  </div>
<!--end background image container-->

<div class="text_container_blog">
  <div class="title"><h1>Tech Blog: Sorting</h1></div>
  <img class ="coffee" src="../Bigless27.github.io.imgs/a-cup-of-coffee.jpg" alt="A cup of coffee">

  <div class="name">by Ryan Lesson</div>
  <div class="date"> October 11th,2015 </div>
  <div class="top-line"></div>


    <div class="P">
<p class="sorttalk1">
      -Hey guy, today I will be talking to you about sorting. A sort method as you have probably seen before in computer languages can sort an array of element into almost anyway that you specify. Some quick examples of this are sorting the elements in ascending and descending order. You may have wondered how the computer actually sorts these elements in that array? Well there is a built in sorting method that is invaded when you call on the sort function ,and I am here to talk to you about three ways to sort an array. The three ways to sort an array are bubble sort, quick sort, and merge sort.
    </p>


    <img class="sort" src="../Bigless27.github.io.imgs/real-bubble.png" height=320 width=330/>
    <p class="sorttalk">
      -Bubble sort, as pictured above, is a very simple way to sort items. The first step is to compare the first element with the second element. and if the first element is bigger that the second swap the elements.  Next take the second element that you just swapped (if it was larger) and compare that to the third element. Repeat this process until you have gone through every element in the array. Now, depending on the length of the array, you would need to complete this process the same number of times as the the length of the array. Also, the name “bubble” in bubble sort is named like that because of how the bigger numbers move to the end of the array or “bubble to the top”.


    </p>


<div class="social_line"></div>
     <img class="sort" src="../Bigless27.github.io.imgs/quick_sort.png"height=320 width=330/>
    <p class="sorttalk">
      -Quick sort, as pictured above, is a faster way than bubble sort to sort an array. Quick sort requires less repetitions of the process when sorting through the process. This is in contrast to a bubble sort which runs through the same number of cycles as its array’s length. First the quick sort method chooses a partition. This partition is usually slated at the end of the array so that it is easier to sort it out. Next check the farthest element one the opposite side of the array. If that element is greater than or less than (depending on Ascending or descending order). If we find an element greater than the pivot on the left hand side of the pivot, we move it to the right of the pivot. On the contrary if the element is less than the pivot, then we will leave it to the left of the pivot. What we are basically doing here is comparing the elements to each other and determining the final position of each element one step at a time.
    </p>


<div class="social_line"></div>
    <img class="sort" src="../Bigless27.github.io.imgs/mergesort.jpg" height=320 width=330/>

    <p class="sorttalk">
      -Merge sort , as pictured above, is a way of breaking down the elements and putting them back together sorted. First what you would do is group to element into two sections. Than you would repeat this method until we have each element by itself. We then start putting the elements back together into sections by merging elements  into each other. Within the elements we compare the values and swap them. Once we have two sorted lists we compare the two sorted list’s elements to each other. and start to populate a final list which contains all the elements in the list sorted.
    </p>


</div>
</div>

      <!-- copy and paste as many sections as you want to add paragraphs -->

  <!--Social-->

  <div class="social_line"></div>
  <div id="social">

      <a href="https://twitter.com/?lang=en"><img src="../Bigless27.github.io.imgs/twitter.png" alt="Twitter"></a>

      <a href="http://www.facebook.com"><img src="../Bigless27.github.io.imgs/high-res-logo_facebook1.png" alt="Facebook"></a>

      <a href="https://www.linkedin.com"><img src="../Bigless27.github.io.imgs/Linkedin.jpg" alt="Linkedin"></a>

      <a href="http://www.GitHub.com/Bigless27"><img src="../Bigless27.github.io.imgs/Octocat.png" alt="GitHub"></a>
    <div>

<div class="bottom-line"></div>
<!--bottom nav-->
 <div class="bottomnav">
    <div class="spacing-top">
      <a href="../index.html">Home</a></div>
       <div class="spacing-top"><a href="../about_me.html">About Me</a> </div>

        <div class="spacing-top"><a href="../projects/index.html">Projects</a></div>

        <div class="spacing-top"> <a href="blog-main.html">Blog</a></div>
        <div class="spacing-top">  <a href="../contact/contact">Contact</a></div>
        </div>
</main>
</html>

